---
export interface NavItem {
  name: string
  url: string
  icon: string // Icon name as string for Astro compatibility
}

export interface Props {
  items: NavItem[]
  className?: string
}

const { items, className = "" } = Astro.props
---

<div class={`fixed bottom-0 sm:top-0 left-1/2 -translate-x-1/2 z-50 mb-6 sm:pt-6 ${className}`}>
  <div class="flex items-center gap-3 bg-background/5 border border-border backdrop-blur-lg py-1 px-1 rounded-full shadow-lg">
    {items.map((item, index) => (
      <a
        href={item.url}
        class={`nav-item relative cursor-pointer text-sm font-semibold px-6 py-2 rounded-full transition-colors text-foreground/80 hover:text-primary ${index === 6 ? 'active bg-muted text-primary' : ''}`}
        data-name={item.name}
      >
        <span class="hidden md:inline">{item.name}</span>
        <span class="md:hidden">
          <svg class="w-[18px] h-[18px] stroke-[2.5]" data-icon={item.icon}>
            <use href={`#${item.icon}`}></use>
          </svg>
        </span>
        <div class={`lamp-background absolute inset-0 w-full bg-primary/5 rounded-full -z-10 ${index === 0 ? 'active bg-muted text-primary' : ''}`}>
          <div class="tube-light absolute -top-2 left-1/2 -translate-x-1/2 w-8 h-1 bg-primary rounded-t-full">
            <div class="glow-1 absolute w-12 h-6 bg-primary/20 rounded-full blur-md -top-2 -left-2"></div>
            <div class="glow-2 absolute w-8 h-6 bg-primary/20 rounded-full blur-md -top-1"></div>
            <div class="glow-3 absolute w-4 h-4 bg-primary/20 rounded-full blur-sm top-0 left-2"></div>
          </div>
        </div>
      </a>
    ))}
  </div>
</div>

<!-- SVG Icon Definitions - Add your icons here -->
<svg class="hidden">
  <defs>
    <g id="home">
      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
      <polyline points="9,22 9,12 15,12 15,22"></polyline>
    </g>
    <g id="user">
      <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
      <circle cx="12" cy="7" r="4"></circle>
    </g>
    <g id="folder">
      <path d="M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"></path>
    </g>
    <g id="mail">
      <rect width="20" height="16" x="2" y="4" rx="2"></rect>
      <path d="m22 7-10 5L2 7"></path>
    </g>
    <g id="phone">
      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
    </g>
    <g id="info">
      <circle cx="12" cy="12" r="10"></circle>
      <path d="m9 12 2 2 4-4"></path>
    </g>
  </defs>
</svg>

<style>
  .nav-item {
    position: relative;
    overflow: hidden;
  }

  .lamp-background {
    opacity: 0;
    transform: scale(0.9);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .lamp-background.active {
    opacity: 1;
    transform: scale(1);
    animation: lampSlideIn 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .tube-light {
    opacity: 0;
    transform: translateY(5px);
    transition: all 0.3s ease;
  }

  .lamp-background.active .tube-light {
    opacity: 1;
    transform: translateY(0);
  }

  .glow-1, .glow-2, .glow-3 {
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .lamp-background.active .glow-1 {
    opacity: 1;
    animation: tubeGlow 2s ease-in-out infinite;
  }

  .lamp-background.active .glow-2 {
    opacity: 1;
    animation: tubeGlow 2s ease-in-out infinite;
    animation-delay: 0.5s;
  }

  .lamp-background.active .glow-3 {
    opacity: 1;
    animation: tubeGlow 2s ease-in-out infinite;
    animation-delay: 1s;
  }

  @keyframes lampSlideIn {
    from {
      opacity: 0;
      transform: scale(0.8) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  @keyframes tubeGlow {
    0% {
      opacity: 0.3;
      transform: scale(0.9);
    }
    50% {
      opacity: 1;
      transform: scale(1.1);
    }
    100% {
      opacity: 0.8;
      transform: scale(1);
    }
  }

  /* Smooth transition for moving lamp effect */
  .lamp-background {
    transition: 
      opacity 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
      transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  /* Enhanced hover effects */
  .nav-item:hover {
    transform: translateY(-1px);
  }

  .nav-item:hover .lamp-background {
    opacity: 0.5;
    transform: scale(0.95);
  }

  .nav-item.active:hover .lamp-background {
    opacity: 1;
    transform: scale(1);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const navItems = document.querySelectorAll('.nav-item');
    const lampBackgrounds = document.querySelectorAll('.lamp-background');
    
    navItems.forEach((item, index) => {
      item.addEventListener('click', function(e) {
        // Remove active class from all items
        navItems.forEach(nav => nav.classList.remove('active'));
        lampBackgrounds.forEach(lamp => lamp.classList.remove('active'));
        
        // Add active class to clicked item
        this.classList.add('active');
        const lampBg = this.querySelector('.lamp-background');
        if (lampBg) {
          lampBg.classList.add('active');
        }
      });
    });

    // Handle resize for mobile detection (matching original behavior)
    let isMobile = window.innerWidth < 768;
    
    function handleResize() {
      isMobile = window.innerWidth < 768;
    }
    
    window.addEventListener('resize', handleResize);
  });
</script>
